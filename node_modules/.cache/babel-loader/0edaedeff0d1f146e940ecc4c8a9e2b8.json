{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _Utils = require('./Utils');\n\nvar Utils = _interopRequireWildcard(_Utils);\n\nvar _CalendarHeader = require('./CalendarHeader');\n\nvar _CalendarHeader2 = _interopRequireDefault(_CalendarHeader);\n\nvar _CalendarBody = require('./CalendarBody');\n\nvar _CalendarBody2 = _interopRequireDefault(_CalendarBody);\n\nvar _ScaleColumn = require('./ScaleColumn');\n\nvar _ScaleColumn2 = _interopRequireDefault(_ScaleColumn);\n\nvar _HeaderCell = require('./HeaderCell');\n\nvar _HeaderCell2 = _interopRequireDefault(_HeaderCell);\n\nvar _DayCell = require('./DayCell');\n\nvar _DayCell2 = _interopRequireDefault(_DayCell);\n\nvar _Event = require('./Event');\n\nvar _Event2 = _interopRequireDefault(_Event);\n\nvar _Modal = require('./Modal');\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  firstDay: _propTypes2.default.object,\n  // the first day in the caledar\n  numberOfDays: _propTypes2.default.number,\n  scaleHeaderTitle: _propTypes2.default.string,\n  headerCellComponent: _propTypes2.default.func,\n  dayFormat: _propTypes2.default.string,\n  // header day format\n  startTime: _propTypes2.default.object,\n  // the start time of the scale and calendar\n  endTime: _propTypes2.default.object,\n  // the end time of the scale and calendar\n  scaleUnit: _propTypes2.default.number,\n  scaleFormat: _propTypes2.default.string,\n  cellHeight: _propTypes2.default.number,\n  dayCellComponent: _propTypes2.default.func,\n  selectedIntervals: _propTypes2.default.array,\n  onIntervalSelect: _propTypes2.default.func,\n  onIntervalUpdate: _propTypes2.default.func,\n  onIntervalRemove: _propTypes2.default.func,\n  eventComponent: _propTypes2.default.func,\n  onEventClick: _propTypes2.default.func,\n  modalComponent: _propTypes2.default.func,\n  useModal: _propTypes2.default.bool,\n  eventSpacing: _propTypes2.default.number\n};\nvar defaultProps = {\n  firstDay: (0, _moment2.default)(),\n  numberOfDays: 7,\n  scaleHeaderTitle: '',\n  headerCellComponent: _HeaderCell2.default,\n  dayFormat: 'dd., DD.MM',\n  startTime: (0, _moment2.default)({\n    h: 0,\n    m: 0\n  }),\n  endTime: (0, _moment2.default)({\n    h: 23,\n    m: 59\n  }),\n  scaleUnit: 15,\n  scaleFormat: 'HH:mm',\n  cellHeight: 25,\n  dayCellComponent: _DayCell2.default,\n  selectedIntervals: [],\n  eventComponent: _Event2.default,\n  modalComponent: _Modal2.default,\n  useModal: true,\n  eventSpacing: 15\n};\n\nvar WeekCalendar = function (_React$Component) {\n  _inherits(WeekCalendar, _React$Component);\n\n  function WeekCalendar(props) {\n    _classCallCheck(this, WeekCalendar);\n\n    var _this = _possibleConstructorReturn(this, (WeekCalendar.__proto__ || Object.getPrototypeOf(WeekCalendar)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var scaleUnit = props.scaleUnit,\n        startTime = props.startTime,\n        endTime = props.endTime;\n    var scaleIntervals = Utils.getIntervalsByDuration(scaleUnit, startTime, endTime);\n    _this.state = {\n      scaleIntervals: scaleIntervals,\n      columnDimensions: [],\n      scrollPosition: {\n        top: 0,\n        left: 0\n      },\n      startSelectionPosition: null,\n      preselectedInterval: null\n    };\n    return _this;\n  }\n\n  _createClass(WeekCalendar, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.calculateColumnDimension();\n      window.addEventListener('resize', this.calculateColumnDimension);\n      window.addEventListener('mouseup', this.handleSelectionStop);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.scaleUnit !== this.props.scaleUnit || nextProps.startTime !== this.props.startTime || nextProps.endTime !== this.props.endTime) {\n        var scaleIntervals = Utils.getIntervalsByDuration(nextProps.scaleUnit, nextProps.startTime, nextProps.endTime);\n        this.setState({\n          scaleIntervals: scaleIntervals\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.calculateColumnDimension);\n      window.removeEventListener('mouseup', this.handleSelectionStop);\n    }\n  }, {\n    key: 'renderSelectedIntervals',\n    value: function renderSelectedIntervals() {\n      var _this2 = this;\n\n      var _props = this.props,\n          firstDay = _props.firstDay,\n          numberOfDays = _props.numberOfDays,\n          cellHeight = _props.cellHeight,\n          scaleUnit = _props.scaleUnit,\n          selectedIntervals = _props.selectedIntervals,\n          eventSpacing = _props.eventSpacing;\n      var _state = this.state,\n          columnDimensions = _state.columnDimensions,\n          scaleIntervals = _state.scaleIntervals;\n      var result = [];\n\n      if (columnDimensions.length === 0 || selectedIntervals.length === 0) {\n        return result;\n      }\n\n      var EventComponent = this.props.eventComponent;\n      var offsetTop = Utils.getOffset(scaleIntervals[0].start);\n\n      var _loop = function _loop(dayIndex) {\n        var day = (0, _moment2.default)(firstDay).startOf('day').add(dayIndex, 'day');\n        var intervals = selectedIntervals.filter(function (interval) {\n          return interval.start.isSame(day, 'day') || interval.end.isSame(day, 'day');\n        });\n\n        if (intervals.length > 0) {\n          intervals.sort(function (i1, i2) {\n            return i1.start.diff(i2.start, 'minutes');\n          });\n          intervals.forEach(function (interval, index, array) {\n            var startY = 0;\n\n            if (!interval.start.isBefore(day)) {\n              startY = Utils.getNumberOfCells(interval.start, scaleUnit, false, offsetTop);\n            }\n\n            if (startY > scaleIntervals.length) {\n              return;\n            }\n\n            var beforeIntersectionNumber = array.filter(function (i, i1) {\n              return i1 < index && interval.start.isBefore(i.end);\n            }).length;\n            var afterIntersectionNumber = array.filter(function (i, i1) {\n              return i1 > index && interval.end.isAfter(i.start);\n            }).length;\n            var groupIntersection = beforeIntersectionNumber + afterIntersectionNumber + 1;\n            var endY = Utils.getNumberOfCells(interval.end, scaleUnit, true, offsetTop);\n\n            if (endY > scaleIntervals.length) {\n              endY = scaleIntervals.length;\n            }\n\n            var top = startY * cellHeight;\n            var width = (columnDimensions[dayIndex].width - eventSpacing) / groupIntersection; //TODO: dividing  by the GroupIntersection doesn't seem to work all that great...\n\n            var left = columnDimensions[dayIndex].left + (width + Math.floor(eventSpacing / groupIntersection)) * beforeIntersectionNumber;\n            var height = (endY - startY) * cellHeight;\n            var eventWrapperStyle = {\n              top: top,\n              left: left,\n              width: width,\n              height: height\n            };\n\n            var eventComponent = _react2.default.createElement('div', {\n              className: 'weekCalendar__overlay',\n              key: dayIndex * 20000 + index,\n              style: eventWrapperStyle,\n              onClick: _this2.handleEventClick.bind(_this2, interval)\n            }, _react2.default.createElement(EventComponent, interval));\n\n            result.push(eventComponent);\n          });\n        }\n      };\n\n      for (var dayIndex = 0; dayIndex < numberOfDays; dayIndex += 1) {\n        _loop(dayIndex);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'renderOverlay',\n    value: function renderOverlay() {\n      if (this.state.startSelectionPosition != null) {\n        var startPosition = this.state.startSelectionPosition;\n        var mousePosition = this.state.mousePosition;\n        var top = Math.min(startPosition.y, mousePosition.y) * this.props.cellHeight;\n        var left = this.state.columnDimensions[Math.min(startPosition.x, mousePosition.x)].left;\n        var lastSelectedColumn = this.state.columnDimensions[Math.max(startPosition.x, mousePosition.x)];\n        var width = lastSelectedColumn.left - left + lastSelectedColumn.width;\n        var height = (Math.max(startPosition.y, mousePosition.y) + 1) * this.props.cellHeight - top;\n        var overlayStyle = {\n          top: top,\n          left: left,\n          width: width,\n          height: height\n        };\n        return _react2.default.createElement('div', {\n          className: 'weekCalendar__overlay weekCalendar__overlay_status_selection',\n          style: overlayStyle\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: 'renderModal',\n    value: function renderModal() {\n      var useModal = this.props.useModal;\n      var preselectedInterval = this.state.preselectedInterval;\n\n      if (useModal && preselectedInterval) {\n        var ModalComponent = this.props.modalComponent;\n        return _react2.default.createElement('div', {\n          className: 'calendarModal'\n        }, _react2.default.createElement('div', {\n          className: 'calendarModal__backdrop',\n          onClick: this.closeModule\n        }), _react2.default.createElement('div', {\n          className: 'calendarModal__content'\n        }, _react2.default.createElement(ModalComponent, _extends({}, preselectedInterval, {\n          onRemove: this.removePreselectedInterval,\n          onSave: this.submitPreselectedInterval\n        }))));\n      }\n\n      return null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          firstDay = _props2.firstDay,\n          numberOfDays = _props2.numberOfDays,\n          headerCellComponent = _props2.headerCellComponent,\n          dayFormat = _props2.dayFormat,\n          scaleUnit = _props2.scaleUnit,\n          scaleFormat = _props2.scaleFormat,\n          cellHeight = _props2.cellHeight,\n          dayCellComponent = _props2.dayCellComponent,\n          scaleHeaderTitle = _props2.scaleHeaderTitle;\n      var isSelection = this.state.startSelectionPosition != null;\n      return _react2.default.createElement('div', {\n        className: isSelection ? 'weekCalendar weekCalendar__status_selection' : 'weekCalendar'\n      }, _react2.default.createElement('div', {\n        className: 'weekCalendar__scaleHeader'\n      }, _react2.default.createElement('span', null, scaleHeaderTitle)), _react2.default.createElement('div', {\n        className: 'weekCalendar__header',\n        style: {\n          left: -this.state.scrollPosition.left\n        }\n      }, _react2.default.createElement(_CalendarHeader2.default, {\n        firstDay: firstDay,\n        numberOfDays: numberOfDays,\n        dayFormat: dayFormat,\n        columnDimensions: this.state.columnDimensions,\n        headerCellComponent: headerCellComponent\n      })), _react2.default.createElement('div', {\n        className: 'weekCalendar__scaleColumn',\n        style: {\n          top: -this.state.scrollPosition.top\n        }\n      }, _react2.default.createElement(_ScaleColumn2.default, {\n        scaleUnit: this.props.scaleUnit,\n        scaleFormat: scaleFormat,\n        scaleIntervals: this.state.scaleIntervals,\n        cellHeight: this.props.cellHeight\n      })), _react2.default.createElement('div', {\n        className: 'weekCalendar__content',\n        onScroll: this.handleScroll\n      }, _react2.default.createElement(_CalendarBody2.default, {\n        firstDay: firstDay,\n        numberOfDays: numberOfDays,\n        scaleUnit: scaleUnit,\n        scaleIntervals: this.state.scaleIntervals,\n        cellHeight: cellHeight,\n        dayCellComponent: dayCellComponent,\n        onSelectionStart: this.handleSelectionStart,\n        onCellMouseEnter: this.handleCellMouseEnter\n      }), this.renderSelectedIntervals(), this.renderOverlay()), this.renderModal());\n    }\n  }]);\n\n  return WeekCalendar;\n}(_react2.default.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.calculateColumnDimension = function () {\n    var numberOfDays = _this3.props.numberOfDays;\n    var columnDimensions = [];\n\n    for (var i = 0; i < numberOfDays; i += 1) {\n      var left = i === 0 ? 0 : columnDimensions[i - 1].left + columnDimensions[i - 1].width;\n      var columnWidth = 0;\n      var columnElement = document.querySelectorAll('[data-colpos=\\'' + i + '\\']')[0];\n\n      if (columnElement) {\n        columnWidth = columnElement.getBoundingClientRect().width;\n      }\n\n      columnDimensions.push({\n        left: left,\n        width: columnWidth\n      });\n    }\n\n    _this3.setState({\n      columnDimensions: columnDimensions\n    });\n  };\n\n  this.handleScroll = function (e) {\n    _this3.setState({\n      scrollPosition: {\n        top: e.target.scrollTop,\n        left: e.target.scrollLeft\n      }\n    });\n  };\n\n  this.handleCellMouseEnter = function (col, row) {\n    if (_this3.state.startSelectionPosition != null) {\n      _this3.setState({\n        mousePosition: {\n          x: col,\n          y: row\n        }\n      });\n    }\n  };\n\n  this.handleSelectionStart = function (col, row) {\n    var startSelectionPosition = {\n      x: col,\n      y: row\n    };\n\n    _this3.setState({\n      startSelectionPosition: startSelectionPosition,\n      mousePosition: startSelectionPosition\n    });\n  };\n\n  this.handleSelectionStop = function (e) {\n    if (e.button !== 0) {\n      return;\n    }\n\n    var _props3 = _this3.props,\n        firstDay = _props3.firstDay,\n        scaleUnit = _props3.scaleUnit,\n        useModal = _props3.useModal;\n    var _state2 = _this3.state,\n        startSelectionPosition = _state2.startSelectionPosition,\n        mousePosition = _state2.mousePosition,\n        scaleIntervals = _state2.scaleIntervals;\n\n    if (startSelectionPosition == null) {\n      return;\n    }\n\n    var endCol = mousePosition.x;\n    var endRow = mousePosition.y;\n    var minDayIndex = Math.min(startSelectionPosition.x, endCol);\n    var maxDayIndex = Math.max(startSelectionPosition.x, endCol);\n    var startDay = (0, _moment2.default)(firstDay).add(minDayIndex, 'days');\n    var endDay = (0, _moment2.default)(firstDay).add(maxDayIndex, 'days');\n    var minCellIndex = Math.min(startSelectionPosition.y, endRow);\n    var maxCellIndex = Math.max(startSelectionPosition.y, endRow) + 1;\n    var offsetTop = Utils.getOffset(scaleIntervals[0].start);\n    var startSelectionTime = Utils.getMoment(scaleUnit, minCellIndex, offsetTop);\n    var endSelectionTime = Utils.getMoment(scaleUnit, maxCellIndex, offsetTop);\n    var start = (0, _moment2.default)(startDay).hour(startSelectionTime.hour()).minute(startSelectionTime.minute()).second(0);\n    var end = (0, _moment2.default)(endDay).hour(endSelectionTime.hour()).minute(endSelectionTime.minute()).second(0);\n\n    if (useModal) {\n      var preselectedInterval = {\n        start: start,\n        end: end\n      };\n\n      _this3.setState({\n        preselectedInterval: preselectedInterval,\n        updateEvent: false\n      });\n    } else {\n      var result = Utils.getIntervals(start, end);\n\n      if (_this3.props.onIntervalSelect) {\n        _this3.props.onIntervalSelect(result);\n      }\n    }\n\n    _this3.setState({\n      startSelectionPosition: null,\n      mousePosition: null\n    });\n  };\n\n  this.removePreselectedInterval = function () {\n    var _state3 = _this3.state,\n        preselectedInterval = _state3.preselectedInterval,\n        updateEvent = _state3.updateEvent;\n\n    if (updateEvent && _this3.props.onIntervalRemove) {\n      _this3.props.onIntervalRemove(preselectedInterval);\n    }\n\n    _this3.setState({\n      preselectedInterval: null\n    });\n  };\n\n  this.submitPreselectedInterval = function (newValue) {\n    var _state4 = _this3.state,\n        preselectedInterval = _state4.preselectedInterval,\n        updateEvent = _state4.updateEvent;\n\n    if (updateEvent) {\n      if (_this3.props.onIntervalUpdate) {\n        _this3.props.onIntervalUpdate(_extends({}, preselectedInterval, newValue));\n      }\n    } else if (_this3.props.onIntervalSelect) {\n      var _intervals = Utils.getIntervals(preselectedInterval.start, preselectedInterval.end);\n\n      var result = _intervals.map(function (interval) {\n        return _extends({}, interval, newValue);\n      });\n\n      _this3.props.onIntervalSelect(result);\n    }\n\n    _this3.setState({\n      preselectedInterval: null\n    });\n  };\n\n  this.closeModule = function () {\n    _this3.setState({\n      preselectedInterval: null\n    });\n  };\n\n  this.handleEventClick = function (oEvent) {\n    if (_this3.props.onEventClick) {\n      _this3.props.onEventClick(oEvent);\n    }\n\n    _this3.setState({\n      preselectedInterval: oEvent,\n      updateEvent: true\n    });\n  };\n};\n\nWeekCalendar.propTypes = propTypes;\nWeekCalendar.defaultProps = defaultProps;\nexports.default = WeekCalendar;","map":null,"metadata":{},"sourceType":"script"}